# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database "netgloo_blog"
spring.datasource.url=jdbc:mysql://14.225.205.182:1887/ohana?allowPublicKeyRetrieval=true&useSSL=false

# Username and password
spring.datasource.username=ohana
spring.datasource.password=!O$&hana@2023

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
application.uploader.cloud-name=ohana123
application.uploader.api-key=534578634358973
application.uploader.api-secret=yVhzuaKVIg7zcs2moQn47Ga9nH8
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

##Port
#server.port=8086
# Naming strategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Allows Hibernating to generate SQL optimized for a particular DBMS
google.app.id=809100511304-qcmbmqj4m2njft9vs8deo2791s6miodm.apps.googleusercontent.com
google.app.secret=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
logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE